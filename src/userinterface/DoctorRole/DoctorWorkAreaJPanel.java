/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.InvestigatorRole.InvestigatorChildAreaJPanel;

/**
 *
 * 
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        //valueLabel.setText(enterprise.getName());
        lblUsername.setText(userAccount.getUsername());
        this.system = system;
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblRequests.getModel();
        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSex();
            row[2] = request.getMedicalStatus();    //Pending / Ongoing / Complete
            if(request.getMedicalStatus()==null){
                row[3] = "";
            }   
            else if(request.getMedicalStatus().equals("Pending"))
            {
                row[3] = "";
            }
            else if(request.getMedicalStatus().equals("Ongoing"))
            {
                row[3] = "Awaiting Results";
            }
            else if(request.getMedicalStatus().equals("Complete"))
            {
                row[3] = "Available";
            }
            /*String result = ((LabTestWorkRequest) request).getTestResult();
            row[4] = result == null ? "Waiting" : "Available";*/
            row[4] = (request.getMedicalReport() == null || request.getMedicalReport().isEmpty()) ? "Not Available" : "Sent";
            model.addRow(row);
}
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRequestTest = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        sptable = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnViewTestResults = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 204));
        setForeground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        btnRequestTest.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRequestTest.setText("Request Test");
        btnRequestTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTestActionPerformed(evt);
            }
        });
        add(btnRequestTest);
        btnRequestTest.setBounds(955, 150, 184, 50);

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh);
        btnRefresh.setBounds(601, 471, 114, 24);

        btnViewDetails.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });
        add(btnViewDetails);
        btnViewDetails.setBounds(955, 285, 184, 50);

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSubmit.setText("Submit Medical Report");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit);
        btnSubmit.setBounds(955, 218, 184, 50);

        lblWelcome.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcome.setText("Welcome");
        add(lblWelcome);
        lblWelcome.setBounds(224, 80, 94, 29);

        lblUsername.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("username");
        add(lblUsername);
        lblUsername.setBounds(321, 80, 194, 29);

        tblRequests.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Child Name", "Gender", "Examination Status", "Test Results", "Medical Report"
            }
        ));
        sptable.setViewportView(tblRequests);

        add(sptable);
        sptable.setBounds(224, 150, 689, 253);

        btnViewTestResults.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnViewTestResults.setText("View Test Results");
        btnViewTestResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTestResultsActionPerformed(evt);
            }
        });
        add(btnViewTestResults);
        btnViewTestResults.setBounds(955, 353, 190, 50);
        add(jLabel2);
        jLabel2.setBounds(190, 10, 1520, 590);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTestActionPerformed
        int selectedRow = tblRequests.getSelectedRow();
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)tblRequests.getValueAt(selectedRow, 0);
        if(request.getMedicalStatus().equals("Ongoing")){
            JOptionPane.showMessageDialog(null, "Patient is currenlty undergoing Tests");
        }
        else{
        RequestLabTestJPanel processWorkRequestJPanel = new RequestLabTestJPanel(userProcessContainer, request, enterprise, userAccount);
        userProcessContainer.add("RequestLabTestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_btnRequestTestActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        populateRequestTable();
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)tblRequests.getValueAt(selectedRow, 0);
     
        
        ViewPatientDetailsJPanel processWorkRequestJPanel = new ViewPatientDetailsJPanel(userProcessContainer, request);
        userProcessContainer.add("ViewPatientDetailsJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)tblRequests.getValueAt(selectedRow, 0);
        if(request.getMedicalReport()==null||request.getMedicalReport().isEmpty()){
        if(request.getMedicalStatus().equals("Complete")){
        MedicalReportJPanel processWorkRequestJPanel = new MedicalReportJPanel(userProcessContainer, request, organization);
        userProcessContainer.add("MedicalReportJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);}
        else{
            JOptionPane.showMessageDialog(null, "Awating Test Results. Plese Wait");
        }}
        else{
            JOptionPane.showMessageDialog(null, "Report already Submitted");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnViewTestResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTestResultsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)tblRequests.getValueAt(selectedRow, 0);
     
        if(request.getMedicalStatus().equals("Complete")){
        ViewTestResultsJPanel processWorkRequestJPanel = new ViewTestResultsJPanel(userProcessContainer, request);
        userProcessContainer.add("ViewTestResultsJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);}
        else{
            JOptionPane.showMessageDialog(null, "Test Results not Available ");
        }
    }//GEN-LAST:event_btnViewTestResultsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRequestTest;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JButton btnViewTestResults;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JScrollPane sptable;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables
}
