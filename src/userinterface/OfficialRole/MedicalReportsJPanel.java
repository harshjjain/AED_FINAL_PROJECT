/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.OfficialRole;

import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class MedicalReportsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount userAccount;
    Enterprise enterprise;


    MedicalReportsJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise) {
                initComponents();
                this.userProcessContainer = userProcessContainer;
                this.userAccount = userAccount;
                this.enterprise = enterprise;
                populateRequestTable();
                
                                Icon i = lblImg.getIcon();
        ImageIcon icon = (ImageIcon)i;
        Image image = icon.getImage().getScaledInstance(lblImg.getWidth() , lblImg.getHeight(), Image.SCALE_SMOOTH);
        lblImg.setIcon(new ImageIcon(image));
    }

        public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblMedicalReport.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request.getMedicalStatus()!=null)
            {
            Object[] row = new Object[4];
            
            row[0] = request;
            row[1] = request.getMedicalStatus();
            row[2] = request.getDoctor();
            if(request.getMedicalReport()==null || request.getMedicalReport().isEmpty())
            {
                row[3] = "Awating";
            }
            else{
                row[3] = "Available";
            }
            model.addRow(row);
            }
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spMedical = new javax.swing.JScrollPane();
        tblMedicalReport = new javax.swing.JTable();
        btnMedicalReport = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblImg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        tblMedicalReport.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblMedicalReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Child Name", "Examination Status", "Doctor", "Medical Report"
            }
        ));
        spMedical.setViewportView(tblMedicalReport);

        add(spMedical);
        spMedical.setBounds(320, 120, 705, 213);

        btnMedicalReport.setBackground(new java.awt.Color(0, 0, 0));
        btnMedicalReport.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnMedicalReport.setForeground(new java.awt.Color(255, 255, 255));
        btnMedicalReport.setText("View Medical Report");
        btnMedicalReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicalReportActionPerformed(evt);
            }
        });
        add(btnMedicalReport);
        btnMedicalReport.setBounds(530, 400, 215, 49);

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnBack.setText("<<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(240, 30, 72, 38);

        lblImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/investigation.jpg"))); // NOI18N
        lblImg.setMaximumSize(new java.awt.Dimension(1680, 1050));
        lblImg.setMinimumSize(new java.awt.Dimension(1680, 1050));
        lblImg.setPreferredSize(new java.awt.Dimension(1680, 1050));
        add(lblImg);
        lblImg.setBounds(20, 0, 1470, 770);
    }// </editor-fold>//GEN-END:initComponents

    private void btnMedicalReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicalReportActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMedicalReport.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        LabTestWorkRequest request = (LabTestWorkRequest)tblMedicalReport.getValueAt(selectedRow, 0);
        if(request.getMedicalReport()==null || request.getMedicalReport().isEmpty()){
            JOptionPane.showMessageDialog(null, "Medical Report not Available");
        }
        else{
        ViewMedicalReportJPanel processWorkRequestJPanel = new ViewMedicalReportJPanel(userProcessContainer, request);
        userProcessContainer.add("ViewMedicalReportJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnMedicalReportActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        OfficialWorkAreaJPanel owap = (OfficialWorkAreaJPanel) component;
        owap.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnMedicalReport;
    private javax.swing.JLabel lblImg;
    private javax.swing.JScrollPane spMedical;
    private javax.swing.JTable tblMedicalReport;
    // End of variables declaration//GEN-END:variables
}
